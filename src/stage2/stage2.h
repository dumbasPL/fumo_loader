#pragma once
#include <Windows.h>
#include <stdint.h>
#include <driver_interface.h>

#define ERR_STAGE2_SUCCESS 0
#define ERR_STAGE2_FAILED_TO_OPEN_PROCESS 50
#define ERR_STAGE2_FAILED_TO_WAIT_FOR_PROCESS 51
#define ERR_STAGE2_FAILED_TO_DELETE_LOADER 52
#define ERR_STAGE2_FAILED_TO_OPEN_DRIVER 53
#define ERR_STAGE2_INVALID_DRIVER_VERSION 54
#define ERR_STAGE2_INVALID_MAGIC 100
#define ERR_STAGE2_INVALID_VERSION 101
#define ERR_STAGE2_FAILED_TO_CREATE_THREAD 102
#define ERR_STAGE2_FAILED_TO_WAIT_FOR_MODULE 103
#define ERR_STAGE2_FAILED_TO_DECOMPRESS_DATA 104
#define ERR_STAGE2_INVALID_PE_HEADER 200
#define ERR_STAGE2_FAILED_TO_ALLOCATE_MEMORY 201
#define ERR_STAGE2_FAILED_TO_MAP_FILE 202
#define ERR_STAGE2_FAILED_TO_EXPOSE_MEMORY 203
#define ERR_STAGE2_FAILED_TO_EXECUTE 204
#define ERR_STAGE2_FAILED_TO_DELETE_SHADOW 205

typedef struct _WAIT_FOR_PROCESS_DATA {
    LPCWSTR process_name;
    DWORD process_id;
    HANDLE cancel_event;
} WAIT_FOR_PROCESS_DATA, *PWAIT_FOR_PROCESS_DATA;

typedef struct _WAIT_FOR_MODULE_DATA {
    std::shared_ptr<fumo::DriverInterface> driver_interface;
    LPCWSTR module_name;
    DWORD process_id;
    PVOID module_base;
    HANDLE cancel_event;
} WAIT_FOR_MODULE_DATA, *PWAIT_FOR_MODULE_DATA;